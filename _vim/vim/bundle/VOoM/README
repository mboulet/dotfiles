This is a mirror of http://www.vim.org/scripts/script.php?script_id=2657

VOoM (Vim Outliner of Markers) emulates a two-pane text outliner. It can be used with any buffer that has start fold markers with level numbers, that is {{{1, {{{2, {{{3, etc. (See :help fold-marker. Markers are specified by option 'foldmarker'.) The only restriction is that there are should be no end fold markers with levels: }}}3, }}}2, etc.

Note that this is not a 'filetype' plugin. VOoM is mostly a utility for navigating and manipulating start fold markers with levels. Numbered markers are versatile for organizing all kinds of files: source code, Vim help file, plain text notes, a large wiki file, a custom GTD format, and so on.

Screenshots and an animation: http://vim-voom.webs.com/

OVERVIEW
============================================================
There are four main Ex commands: Voom, Voomhelp, Voomexec, Voomlog.

:Voom
        Create outline of the current buffer. Outline is constructed from lines with start fold markers with level numbers, which become headlines. Outline is displayed in a special buffer in separate window which emulates the tree pane of a two-pane outliner. Such buffers are referred to as Tree buffers. The current buffer becomes a Body buffer.

:Voomhelp
        Open help file voom.txt as outline in a new tabpage.

:Voomexec [vim|py]
        Execute text in the current node or fold as Vim script or Python script. This is useful for testing code snippets and for organizing scripts by segregating them into nodes or folds. This command can be used independently of the outlining functionality provided by the command :Voom.

:Voomlog
        Create scratch buffer __PyLog__ and redirect Python stdout and stderr to that buffer. This is useful when developing Python scripts and when scripting Vim with Python. This feature is completely independent from the rest of the plugin.

NOTE: commands Voomexec and Voomlog attempt to emulate similar features of Leo outlining editor.


REQUIREMENTS
============================================================
This plugin uses Python and requires Python-enabled Vim 7.x, that is Vim compiled with the Python interface. Your Vim is Python-enabled if it can do
        :py print 2**0.5
        :py import sys; print sys.version

Python version should be 2.4-2.7. Python 3 is not supported.

Vim version 7.2 or above is preferred. Version 7.1 should also work. Versions 7.0 might work as well but has not been tested. Vim should be compiled using normal or bigger feature set.


QUICK DEMO (no installation needed)
============================================================
Extract VOoM archive to any folder. Open "plugin/voom.vim" in Vim and do
        :so %
        :Voom
This will create Tree buffer for voom.vim, which will become a Body buffer.

All VOoM mappings, except Return and Tab, are for Tree buffers only.

<Up>, <Down>, <Left>, <Right> arrow keys move around the Tree and select new node (Normal mode).

<Return> selects node the cursor is on and then cycles between Tree and Body. So, to select another node, move to it with h, j, etc. and hit Return.

<Tab> cycles between Tree and Body windows without selecting node.

<Space> expands/contracts node without selecting it. Standard Vim folding command (zo, zc, zR, zM, etc.) can be used as well.

Left mouse click in the Tree selects node. If the click is outside of headline text, the node's expanded/contracted status is toggled.

Edit a headline (line with a numbered fold marker) in voom.vim and go back into the Tree: the outline will be updated.

<C-Up>, <C-Down> move node or a range of sibling nodes up/down.
<C-Left>, <C-Right> promote/demote.

Execute the command :Voomhelp to see all commands and mappings.


To create outline for another buffer, execute the command :Voom for it
        :tab h netrw
        :Voom
Folder "voom_samples" contains some outlines to experiment with. File "calendar_outline.txt" is a rather large outline for stress-testing purposes: 3.1MB, 56527 lines, 4160 headlines.


To try Python Log Buffer feature:
        :Voomlog
        :py assert 2==3
        :py print VOOM.nodes
        :py print u'\u2248 \u2260'

